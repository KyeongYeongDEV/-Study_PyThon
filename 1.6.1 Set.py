#집합
#중복을 허용하지 않는다
#순서가 없다(Unordered) = 인덱싱 불가
s1 = set([1,2,3])
s1
{1, 2, 3} #괄호 안에 리스트를 입력하여 만들거나

#다음과 같이 문자열을 입력하여 만들 수도 있다
s2 = set("Hello")
s2
{'e', 'H', 'l', 'o'}

#비어있는 자료형은 s = set()으로 만들 수 있다

#set을 인덱싱하려면 리스트나 튜플로 변환한 후 해야 한다.
s1 = set([1,2,3])
l1 = list(s1)
l1
[1, 2, 3]
l1[0]
1
t1 = tuple(s1)
t1
(1, 2, 3)
t1[0]
1

#자료형의 중복을 제거하기 위한 필터로 사용되기도 한다.

#교집합, 차집합, 합집합 구하기
s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7, 8, 9])

#교집합
s1 & s2 
{4, 5, 6} 
s1.intersection(s2)
{4, 5, 6}

#합집합
s1 | s2
{1, 2, 3, 4, 5, 6, 7, 8, 9}
s1.union(s2)
{1, 2, 3, 4, 5, 6, 7, 8, 9}

#차집합 - 겹치는 걸 없애주는 느낌
s1 - s2
{1, 2, 3}
s2 - s1
{8, 9, 7}
s1.difference(s2)
{1, 2, 3}
s2.difference(s1)
{8, 9, 7}


#집합 자료형 관련 함수들
#값 1개 추가하기 (add)
s1 = set([1, 2, 3])
s1.add(4)
s1
{1, 2, 3, 4}

#값 여러 개 추가하기(update)
s1 = set([1, 2, 3])
s1.update([4, 5, 6])
s1
{1, 2, 3, 4, 5, 6}

#특정값 제거하기 (remove)
s1 = set([1, 2, 3])
s1.remove(2)
s1
{1, 3}